/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.DoctorRole;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.EconomyOrganization;
import Business.Organization.LabOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import Business.WorkQueue.appointment;
import Business.WorkQueue.vaccinate;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author diyabaldota
 */
public class DoctorWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private DoctorOrganization organization;
    private Enterprise enterprise;
    private EcoSystem system;
    private UserAccount userAccount;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public DoctorWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, DoctorOrganization organization, Enterprise enterprise, EcoSystem system) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.system = system;
        this.userAccount = account;
        //valueLabel.setText(enterprise.getName());
        //populateRequestTable();
        populateTable();
//        btnPrescribeMed.setVisible(false);
//        btnTest.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnTest = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblReq = new javax.swing.JTable();
        btnApproved = new javax.swing.JButton();
        appointmentjDateChooser = new com.toedter.calendar.JDateChooser();
        btnPrescribedmed = new javax.swing.JButton();
        btnRejected = new javax.swing.JButton();
        lblTxt = new javax.swing.JLabel();
        lblVal = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1440, 848));
        setPreferredSize(new java.awt.Dimension(1440, 848));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnTest.setFont(new java.awt.Font("Optima", 0, 16)); // NOI18N
        btnTest.setText("Send for lab tests");
        btnTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestActionPerformed(evt);
            }
        });
        add(btnTest, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 330, -1, -1));

        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));

        tblReq.setForeground(new java.awt.Color(36, 47, 65));
        tblReq.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Sender", "Sender Email", "Receiver", "Status", "Result", "Name"
            }
        ));
        tblReq.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblReq.setRowHeight(20);
        jScrollPane1.setViewportView(tblReq);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 80, 680, 180));

        btnApproved.setFont(new java.awt.Font("Optima", 0, 16)); // NOI18N
        btnApproved.setText("Approve Appointment");
        btnApproved.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApprovedActionPerformed(evt);
            }
        });
        add(btnApproved, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 280, -1, -1));

        appointmentjDateChooser.setBackground(new java.awt.Color(220, 241, 251));
        add(appointmentjDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 40, -1, -1));

        btnPrescribedmed.setFont(new java.awt.Font("Optima", 0, 16)); // NOI18N
        btnPrescribedmed.setText("Prescribe Medicine");
        btnPrescribedmed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrescribedmedActionPerformed(evt);
            }
        });
        add(btnPrescribedmed, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 330, -1, -1));

        btnRejected.setFont(new java.awt.Font("Optima", 0, 16)); // NOI18N
        btnRejected.setText("Reject Appointment");
        btnRejected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectedActionPerformed(evt);
            }
        });
        add(btnRejected, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 280, -1, -1));

        lblTxt.setBackground(new java.awt.Color(0, 0, 0));
        lblTxt.setFont(new java.awt.Font("Optima", 0, 16)); // NOI18N
        lblTxt.setText("Currently Logged in as:");
        add(lblTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, -1, 30));

        lblVal.setBackground(new java.awt.Color(0, 0, 0));
        lblVal.setFont(new java.awt.Font("Optima", 1, 22)); // NOI18N
        lblVal.setText("<value>");
        add(lblVal, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 30, 230, 30));

        lblTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/docworkarea.png"))); // NOI18N
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 1580, 670));
    }// </editor-fold>//GEN-END:initComponents

    private void btnTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btnTestActionPerformed

    private void btnApprovedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApprovedActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btnApprovedActionPerformed

    private void btnPrescribedmedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrescribedmedActionPerformed
        // TODO add your handling code here:
        if(txtMedList.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Please agree to the terms of service", "Warning", JOptionPane.WARNING_MESSAGE);
            
        }
        
        if(validate(txtMedList.getText())){
            UserAccount pharma = new UserAccount();
            prescribeMedicine pm = new prescribeMedicine();
            pm.setPerson(person);
            pm.setSender(account);
            Network cn = enterprise.getNetwork();
            System.out.println("Outside for");
            for(Enterprise e : cn.getEnterpriseDirectory().getEnterpriseList()){
                System.out.println("inside for");
                if(e.getEnterpriseType() == EnterpriseType.Hospital){
                    System.out.println("inside enterprise");
                    for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
                        System.out.println("inside for org");
                        for(UserAccount u : o.getUserAccountDirectory().getUserAccountList()){
                            System.out.println("inside for user");
                            if(u.getRole().toString().equals("Business.Role.PharmaRole")){
                                System.out.println("user found");
                                pm.setReceiver(u);
                                System.out.println(u.getUsername());
                                pharma = u;
                                break;
                            }
                        }
                    }
                }
            }
            pm.setMessage(person.getUsername());
            pm.setMedList(txtMedList.getText());
            pm.setStatus("Request");
            person.getWorkQueue().getWorkRequestList().add(pm);
            account.getWorkQueue().getWorkRequestList().add(pm);
            pharma.getWorkQueue().getWorkRequestList().add(pm);
        }
        dB4OUtil.storeSystem(system);
        txtMedList.setText("");
         JOptionPane.showMessageDialog(null, "Request Submited");
           
    }                                           

    }//GEN-LAST:event_btnPrescribedmedActionPerformed

    private void btnRejectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectedActionPerformed
        // TODO add your handling code here:int selectedRow = tblRequest.getSelectedRow();
        
    }//GEN-LAST:event_btnRejectedActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser appointmentjDateChooser;
    private javax.swing.JButton btnApproved;
    private javax.swing.JButton btnPrescribedmed;
    private javax.swing.JButton btnRejected;
    private javax.swing.JButton btnTest;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTxt;
    private javax.swing.JLabel lblVal;
    private javax.swing.JTable tblReq;
    // End of variables declaration//GEN-END:variables
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)tblReq.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[7];
            if(request instanceof appointment){
            row[0] = request;
            row[1] = request.getSender().getEmployee().getName();
            String email = ((appointment) request).getEmail();
            row[2] = email;
            row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[4] = request.getStatus();
            String result = ((appointment) request).getTestResult();
            row[5] = result;
            row[6] = request.getReceiver().getUsername();
            
            model.addRow(row);
        }
        }
    }
}
